burn() {
	dd status=progress bs=64k if="$1" of="$2"
	sync
}

lock() {
	doas openvt -c7 -- sh -c "USER=${USER} vlock -a; chvt 1" &&
	doas chvt 7
}

ll() {
	# shellcheck disable=SC2012
	ls -FXAl "$@" | awk 'NR>1 || !/total/'
}

md() {
	pandoc "$1" -t plain | less
}

cmp256() {
	diff <(sha256sum "$1" | awk '{ print $1 }') <(echo "$2")
}

cmp512() {
	diff <(sha512sum "$1" | awk '{ print $1 }') <(echo "$2")
}

cmp256f() {
	diff <(sha256sum "$1" | awk '{ print $1 }') <(sha256sum "$2" | awk '{ print $1 }')
}

cmp512f() {
	diff <(sha512sum "$1" | awk '{ print $1 }') <(sha512sum "$2" | awk '{ print $1 }')
}

killport() {
	doas fuser -k "$1"/tcp
}

finddir() {
	find "$2" -type d -name "$1" 2>/dev/null
}

findfile() {
	find "$2" -type f -name "$1" 2>/dev/null
}

cdlink() {
	cd "$(readlink -f "$1")" || echo "Failed to cd into the link destination."
}

chwallpaper() {
	if [ -z "$1" ]; then
		xwallpaper --zoom "$(find "${HOME}/media/wallpapers/" -type f | shuf -n 1)"
		return
	fi
	xwallpaper --zoom "$1"
}

playMoOII() {
	dosbox -c "mount c ${HOME}/.local/games/Master_of_Orion_II/mastori2" -c "c:" -c "Orion2.exe" -conf "${HOME}/.local/games/Master_of_Orion_II/dosbox.conf"
}

crop() {
	local base="${1%.*}"                      # Extract the base filename (without extension)
	local ext="${1##*.}"                      # Extract the file extension
	convert "$1" -crop "$2" "${base}.crop.${ext}" # Append .crop and the original extension
}

safecp() {
	rsync -avhc --progress "$1" "$2"
}

removei386() {
	dpkg -l | grep -i :i386 | awk '{print $2}' | xargs doas apt autopurge --allow-remove-essential &&
	doas dpkg --remove-architecture i386
}

createswap() {
	if [ -z "$1" ]; then
		echo "Usage: createswap <size> [filename]" >&2
		return 1
	fi
	local swapfile="${2:-/swapfile}" # Default to /swapfile
	doas fallocate -l "$1" "${swapfile}" &&
	doas chmod 600 "${swapfile}" &&
	doas mkswap "${swapfile}" &&
	doas swapon "${swapfile}" &&
	echo "${swapfile} none swap sw 0 0" | doas tee -a /etc/fstab >/dev/null
}

removeswap() {
	if [ -z "$1" ]; then
		echo "Usage: removeswap <filename>" >&2
		return 1
	fi
	local swapfile="$1"
	if ! grep -q "^${swapfile} " /etc/fstab; then
		echo "Error: ${swapfile} is not listed as a swap file in /etc/fstab."
		return 1
	fi
	doas swapoff "${swapfile}" &&
	doas rm -f "${swapfile}" &&
	doas sed -i "\|^${swapfile} |d" /etc/fstab
}

append_bytes() { # Appends harmless empty bytes to a file
	if [ $# -ne 2 ]; then
		echo "Usage: append_bytes <file> <num_bytes>" >&2
		return 1
	fi

	dd if=/dev/zero bs=1 count="$2" >>"$1"
}

apt() {
	if [ ! -x /usr/sbin/start-stop-daemon ]; then
		echo '#!/bin/true' | doas tee /usr/bin/start-stop-daemon >/dev/null
		doas chmod +x /usr/bin/start-stop-daemon
		doas apt-get reinstall dpkg -y >/dev/null
		doas rm /usr/bin/start-stop-daemon
	fi
	doas apt "$@"
}

apt-get() {
	if [ ! -x /usr/sbin/start-stop-daemon ]; then
		echo '#!/bin/true' | doas tee /usr/bin/start-stop-daemon >/dev/null
		doas chmod +x /usr/bin/start-stop-daemon
		doas apt-get reinstall dpkg -y >/dev/null
		doas rm /usr/bin/start-stop-daemon
	fi
	doas apt-get "$@"
}

gdoc2all() {
	OPTIND=1
	local format=""
	while getopts "pdorthmez" opt; do
		case "${opt}" in
		p) format="pdf" ;;
		d) format="docx" ;;
		o) format="odt" ;;
		r) format="rtf" ;;
		t) format="txt" ;;
		h) format="html" ;;
		m) format="md" ;;
		e) format="epub" ;;
		z) format="zip" ;;
		*)
			echo "Usage: gdoc2all [-p|-d|-o|-r|-t|-h|-m|-e|-z] <Google Docs URL>" >&2
			return 1
			;;
		esac
	done
	shift $((OPTIND - 1))
	format=${format:-pdf}
	[[ "$1" =~ /d/([^/]+)/ ]] || {
		echo "Invalid Google Docs URL" >&2
		return 1
	}
	local tmpdoc
	tmpdoc="$(mktemp --tmpdir "gdocs-XXXXXXXXXX.${format}")"
	wget -q --show-progress --progress=bar -O "${tmpdoc}" "https://docs.google.com/document/d/${BASH_REMATCH[1]}/export?format=${format}" &&
	echo "File downloaded at ${tmpdoc}"
}
