export LOADED_BASHRC=1 # Prevents this file from being sourced more than once

# Start tmux at login
if [ -z "${TMUX}" ] && [[ "$(tty)" != /dev/tty[123] ]]; then # Starting tmux also clears the console
	exec tmux new-session -s "session-$(\date +'%Y%m%d-%H%M%S-%3N')"
elif [ "$(tty)" != /dev/tty1 ]; then # Clear any messages on ttys but tty1
	clear
fi

# Load local profiles
if [ -d "${HOME}/.local/profile.d" ]; then
	for i in "${HOME}/.local/profile.d/"*; do . "${i}"; done
fi
unset i

# Load aliases
. "${HOME}/.config/bash/aliases"
# Load functions
. "${HOME}/.config/bash/functions"
# Load Keybinds
. "${HOME}/.config/bash/keybinds"
# Load variables
. "${HOME}/.config/env"

case $- in # Check for an interactive session
*i*) ;;
*) return ;;
esac

# Start X at login
if [ "$(tty)" = "/dev/tty1" ]; then
	if [ -f /tmp/.Xinit-lock ]; then
		echo "Xorg has restarted. Press Enter to restart Xorg."
		read -r
	fi
	touch /tmp/.Xinit-lock
	pidof Xorg >/dev/null 2>&1 || exec startx >/dev/null 2>&1
fi

if shopt -oq posix; then # If POSIX, return
	return
fi

# Setup dircolors
command -v dircolors >/dev/null && eval "$(dircolors -b)"

# Enable shell completion features
if [ -f /usr/share/bash-completion/bash_completion ]; then
	. /usr/share/bash-completion/bash_completion
elif [ -f /etc/bash_completion ]; then
	. /etc/bash_completion
fi

# Load command not found handler
command_not_found_handle() {
	if [ -x /usr/share/command-not-found/command-not-found ]; then
		/usr/share/command-not-found/command-not-found -- "$1"
		return $?
	elif [ -x /usr/lib/command-not-found ]; then
		/usr/lib/command-not-found -- "$1"
		return $?
	fi
	printf "%s: command not found\n" "$1" >&2
	return 127
}

export HISTCONTROL='ignoreboth'
export HISTSIZE=''
export HISTFILESIZE=''
export HISTTIMEFORMAT='%F %T '
export HISTFILE="${HOME}/.config/bash/history"
shopt -s histappend       # append to history, don't overwrite it
shopt -s checkwinsize     # check the window size after each command
shopt -s globstar         # understand ** as all files in all subdirectories
shopt -s dotglob          # also include hidden files in globbing
complete -cf doas         # complete doas commands
complete -F _command doas # complete doas commandss

# Set the prompt
PROMPT_COMMAND="build_prompt"
build_prompt() {
	local ref
	ref=$(git branch --show-current 2>/dev/null || true)
	# PS1="${RESET}[\A/\u \W]${ref:+($ref)}\$ " # uncomment for no color
	# shellcheck disable=SC2154
	PS1="${BOLD}${RED}[${GREEN}\A${BLUE}/${CYAN}\u ${YELLOW}\W${RED}]${WHITE}${ref:+(${RED}${ref}${WHITE})}\$ ${RESET}"
}

# Welcome message
if [ -s "/tmp/bible.qotd" ]; then
	echo -e "\033[1mWelcome ${USER}.\nToday is $(\date '+%A, %B %d, %Y').\n\n\033[0m$(cat /tmp/bible.qotd)\033[1m\n"
else
	echo -e "\033[1mWelcome ${USER}.\nToday is $(\date '+%A, %B %d, %Y').\n"
	if ! pgrep -f "bibverse" >/dev/null; then
		bibverse 2>/dev/null | sed 's/\(.*\)â€”/\1\n\t- /' >/tmp/bible.qotd &
		disown $! # Suppress job finish notification by disowning it
	fi
fi
