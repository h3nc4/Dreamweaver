#!/bin/sh
set -x

# Config grub
doas tee /etc/default/grub >/dev/null <<EOF
GRUB_DEFAULT=0
GRUB_TIMEOUT=0
GRUB_DISTRIBUTOR=Debian
GRUB_CMDLINE_LINUX_DEFAULT="quiet"
GRUB_CMDLINE_LINUX=""
GRUB_DISABLE_OS_PROBER=true
GRUB_BACKGROUND=/boot/grub/end.jpeg
EOF
doas cp pics/end.jpeg /boot/grub/
doas update-grub

# Config Xorg
cp -r config/X11 "$XDG_CONFIG_HOME/"

# Enable touchpad tapping
doas mkdir -p /etc/X11/xorg.conf.d
doas tee /etc/X11/xorg.conf.d/40-libinput.conf >/dev/null <<'EOF'
Section "InputClass"
Identifier "libinput touchpad catchall"
MatchIsTouchpad "on"
MatchDevicePath "/dev/input/event*"
Driver "libinput"
Option "Tapping" "on"
EndSection
EOF

# Enable periodic trim
doas tee /etc/cron.weekly/fstrim >/dev/null <<'EOF'
#!/bin/sh
{
	echo "===== $(date) ====="
	fstrim --all --verbose
} >>/var/log/fstrim.log 2>&1
EOF
doas chmod +x /etc/cron.weekly/fstrim
doas touch /var/log/fstrim.log
doas chmod 644 /var/log/fstrim.log

# Config compton
cp config/compton.conf "$XDG_CONFIG_HOME/compton.conf"

# Config gtk
mkdir -p "$XDG_CONFIG_HOME/gtk-3.0" "$XDG_CONFIG_HOME/gtk-2.0"
cp config/gtk/gtk3.conf "$XDG_CONFIG_HOME/gtk-3.0/settings.ini"
cp config/gtk/gtk2.conf "$XDG_CONFIG_HOME/gtk-2.0/gtkrc"

# Config tmux
cp config/tmux/tmux.conf "$XDG_CONFIG_HOME/tmux.conf"
(
	tmux new-session -d -s tmp_session
	tmux source-file "$XDG_CONFIG_HOME/tmux.conf"
	tmux kill-session -t tmp_session
) &

# Config bash
doas rm -f /etc/bash.bashrc "$HOME/.bashrc" "$HOME/.bash_profile" "$HOME/.bash_login" "$HOME/.bash_logout" "$HOME/.profile" >/dev/null 2>&1
mkdir -p "$HOME/.local/profile.d" "$HOME/.config/bash"
cp config/env "$XDG_CONFIG_HOME/env"
cp -r config/bash "$XDG_CONFIG_HOME/"
cp -r config/profile.d "$HOME/.local/"
doas tee /etc/profile >/dev/null <<EOF
#!/bin/sh
if [ -n "\$PROFILED" ]; then
	return
fi
PROFILED=1
export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"
if [ -d /etc/profile.d ]; then
	for i in /etc/profile.d/*.sh; do . "\$i"; done; unset i
fi
if [ "\$BASH" ] && [[ \$- == *i* ]]; then
	function command_not_found_handle (){ echo "bash: \$1: command not found"; return 127; }
	if [ -f "\$HOME/.config/bash/bashrc" ]; then
		. "\$HOME/.config/bash/bashrc"
	fi
fi
EOF
doas ln -s /etc/profile /etc/bash.bashrc
echo "[ \"\$SHLVL\" -eq 1 ] && [ -x /usr/bin/clear_console ] && /usr/bin/clear_console -q" | doas tee /etc/bash.bash_logout >/dev/null
ln -sf "$HOME/.local/profile.d/yt" "$HOME/.local/bin/yt"

# Config backgrounds
mkdir -p "$HOME/media/wallpapers"
cp pics/landscape.jpg "$HOME/media/wallpapers/landscape.jpg"

# Create newsboat dirs
mkdir -p "$XDG_DATA_HOME/newsboat" "$XDG_CONFIG_HOME/newsboat"

# Config mpv
mkdir -p "$HOME/.config/mpv"
ln -s "$HOME/.local/bin/yt-dlp" "$HOME/.config/mpv/yt-dlp"
cp config/mpv.conf "$HOME/.config/mpv/mpv.conf"

# Config lf
install -Dm755 config/lf/lfprev "$HOME/.local/bin/lfprev"
install -Dm755 config/lf/preview "$HOME/.config/lf/preview"
install -Dm755 config/lf/cleaner "$HOME/.config/lf/cleaner"
cp config/lf/lfrc "$HOME/.config/lf/lfrc"
